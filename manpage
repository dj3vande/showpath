
NAME
    showpath - manageably edit path


SYNOPSIS
    showpath [-t type | -v ENV_NAME] path_entry ...


DESCRIPTION
    The showpath tool writes a string suitable for use as a path
    to stdout.  The string is constructed by combining the path
    entries given on the command line, in order, with duplicates
    pruned.

    The magic path_entry '%current' is expanded to the current
    entries in the path (taken from the environment), in the order
    they appear in the environment.

    The following options are available:

        -t type
            Specifies a pre-configured path type.
            Valid types are currently compiled in; making them
              configurable (by system and/or user configuration
              files) is on the to-do list.
            Currently known types are:
                exec    (for $PATH)
                man     (for $MANPATH)
            
            The -t option currently only provides a shorthand for
            an equivalent use of the -v option.  Adding short names
            for sets of path entries is on the to-do list; when
            this happens, specifying a type will also select a set
            of short names based on the type.

        -v ENV_NAME
            Specifies an environment variable name to look up for
            the expansion of '%current'.

        The -t and -v options are mutually exclusive, and at most
        one of either can be specified.  Specifying neither is
        equivalent to specifying '-t exec'.


EXAMPLES
    PATH=`showpath $HOME/bin %current`
        Puts $HOME/bin at the beginning of $PATH, or moves it to
        the beginning if it's already in there somewhere.

    C_INCLUDE_PATH=`showpath -vC_INCLUDE_PATH %current /opt/local/include`
    LIBRARY_PATH=`showpath -vLIBRARY_PATH %current /opt/local/lib`
    export C_INCLUDE_PATH LIBRARY_PATH
        Tells gcc to use header and library files from Macports,
        without clobbering existing values of the environment
        variables used.


TO DO
    -Add configurable short names
        (e.g. we should be able to create a config file for a Mac
        installation so that 'showpath -tman %fink %current' outputs
        /sw/man (where fink keeps its manpages) prepended to $MANPATH,
        or moves it to the front if it's already in there somewhere.)

    -Make '~' prefix on path_entries expand to $HOME

    -Add capability to prune directories that do not exist
        (combined with the above to-do items, this will let the
        system config specify something like
                type exec
                {
                    home = ~/bin;
                    home = ~/bin-SunOS;
                }
        which allows users who have home directories shared between
        machines with different architectures to say 'PATH=`showpath
        %home %current`' and automagically get personal arch-specific
        bin directories if they exist, without cluttering up $PATH
        if they don't.)

    -Make the path separator configurable
        (Windows likes to use ';')

    -Split command-line args on separator instead of treating argv[i] as
        a single word
        (This would allow a use case like:
                oldpath=$PATH
                . /path/to/some/setup/script
                PATH=`showpath $oldpath %current`
        to force the new stuff added by a (presumably not your)
        setup script to go to the end of the path.)


BUGS
    '-v' does not control verbosity; this may confuse users, and
    therefore may be changed at some point in the future.
